---

- name: Prepare controller for execution
  hosts: localhost
  tags: always
  tasks:
    - name: Configure for standalone role testing
      ansible.builtin.include_role:
        name: influxdata.molecule.prepare_controller
      vars:
        prepare_controller_project_type: role

- name: Prepare target host for execution
  hosts: molecule
  tags: always
  tasks:
    ##
    # Creating an admin service account for Molecule/Ansible to use for testing
    #
    #   - If you run Ansible as a service account (you should) on your hosts and
    #     not as root, it is wise to also test as a non-root user!
    #
    #   - To use this account, add the following to any plays targeting test
    #     infrastructure (such as in converge.yml):
    #
    #         vars:
    #           ansible_user: molecule_runner
    ##

    - name: Create ansible service account
      vars:
        molecule_user: molecule_runner
      become: true
      block:
        - name: Create ansible group
          ansible.builtin.group:
            name: "{{ molecule_user }}"

        - name: Create ansible user
          ansible.builtin.user:
            name: "{{ molecule_user }}"
            group: "{{ molecule_user }}"

        - name: Sudoers.d directory exists
          ansible.builtin.file:
            path: /etc/sudoers.d
            state: directory
            owner: root
            group: root
            mode: 0751

        - name: Ansible user has sudo
          ansible.builtin.copy:
            content: |
              {{ molecule_user }}  ALL=(ALL)  NOPASSWD: ALL
            dest: /etc/sudoers.d/ansible
            owner: root
            group: root
            mode: 0600

    - name: Load host facts
      ansible.builtin.setup:
        gather_subset:
          - '!all'
          - '!min'
          - distribution
        filter:
          - ansible_distribution*

    - name: Set up legacy system packages
      when: >
        ansible_distribution == "Amazon" and ansible_distribution_major_version == "2" or
        ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"
      block:
        - name: Do package manager actions
          become: true
          block:
            - name: Install Cent7 specific packages
              when: ansible_distribution == "CentOS"
              ansible.builtin.yum:
                name:
                  - epel-release
                state: present

            - name: Install package prequisites
              ansible.builtin.package:
                name:
                  - tar
                  - curl
                  - bzip2
                state: present

            - name: Install troubleshooting packages
              ansible.builtin.package:
                name:
                  - jq
                  - vim
                  - bind-utils
                state: present

            - name: Install pypy python interpreter for Ansible
              ansible.builtin.include_role:
                name: python_standalone

    - name: Load OS compatibility settings
      ansible.builtin.include_tasks: tasks/os_compat.yml

    - name: Python requests library is installed
      become: true
      ansible.builtin.pip:
        # Requests 2.32.0 has a docker incompatibility -- see https://github.com/influxdata/team-cloud1-engineering/issues/564
        name: requests<2.32
        state: present

